long counter = 0;
long counter_2 = 0;
uint64_t timmer_1 = 0;
uint64_t timmer_2 = 0;
uint64_t timmer_3 = 0;
uint64_t timmer_4 = 0;
int x = 0;
int y = 0; 
bool lcdClear = 0;
bool flag = 1;
bool zummer_on = 0;
long comands_pult = 0;
 #include <IRremote.h>
 #define ZUMMER 7
 #define BUTTON_MINUS 12
 #define BUTTON_PLUS 9 
 #define BUTTON_OK 10
 #define LED_R 13
 //#define RECV_PIN 11
 int RECV_PIN = 11;

IRrecv irrecv(RECV_PIN);

decode_results results;
#include <Wire.h>
#include "ASOLED.h"



IRsend irsend;

void setup() {
  Serial.begin(115200);
  pinMode(BUTTON_PLUS, INPUT_PULLUP);
  pinMode(BUTTON_OK, INPUT_PULLUP);
  pinMode(BUTTON_MINUS, INPUT_PULLUP);
  pinMode(LED_R, OUTPUT);
  pinMode(ZUMMER, OUTPUT);
  LD.init();
  LD.clearDisplay();
  irrecv.enableIRIn(); // Start the receiver


}

void loop() {
 
  if(counter < 0){
  counter = 15;
  flag = 1;
  lcdClear = 1;
 }

  if(!digitalRead(BUTTON_PLUS) && millis() - timmer_1 >= 200){
  counter++;
flag = 1;
timmer_1 = millis();
//lcdClear = 1;  
  }
  if(counter > 15){
    counter = 0;
    flag = 1;
    lcdClear = 1;
    }
    
  if(!digitalRead(BUTTON_MINUS) && millis() - timmer_1 >= 250){
  counter--;
  flag = 1;
 // lcdClear = 1;
  timmer_1 = millis();}
       
 if(counter < 8 && flag){
   if(lcdClear){
    LD.clearDisplay();
    lcdClear = 0;
  }
  LD.printString_6x8("  Новая игра", x, 0);
  LD.printString_6x8("  АдминKiLL", x, 1);
  LD.printString_6x8("  Удвоить Жизни", x, 2);
  LD.printString_6x8("  Пополнить Боезапас", x, 3);
  LD.printString_6x8("  Красный/синий цвет", x, 4);
  LD.printString_6x8("  Красный цвет", x, 5);
  LD.printString_6x8("  Синий цвет", x, 6);
  LD.printString_6x8("  Жёлтый цвет", x, 7);
  LD.printString_6x8(">>", 0, counter);
  flag = 0;
}
else if(flag) {  
  if(lcdClear){
    LD.clearDisplay();
    lcdClear = 0;
  }
  LD.printString_6x8("  Зелёный цвет", x, 0);
  LD.printString_6x8("  Пресеты", x, 1);  // 9 person
  LD.printString_6x8("  ОчиститьCтатистику", x, 2);
  LD.printString_6x8("  Вкл.Друж.Огонь", x, 3);
  LD.printString_6x8("  Откл.Друж.Огонь", x, 4);
  LD.printString_6x8("  мощность99%/49%", x, 5);
  LD.printString_6x8("  Удвоть Жизнь x2 x2", x, 6);
  LD.printString_6x8("  Тест Выстрела", x, 7);
  LD.printString_6x8(">>", 0, counter - 8);
  flag = 0;
  }
  
if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 250 && comands_pult){  
  zummer_on = 1;
  irsend.sendSony(comands_pult, 24); 
   timmer_3 = millis();

}

switch(counter){
       case 0:
       comands_pult = 0x8305E8;
       break;
       case 1:
       comands_pult = 0x8300E8;
       break;    
       case 2:
       comands_pult = 0x8322E8;
       break;    
        case 3:
       comands_pult = 0x8306E8;
       break; 
        case 4:
       comands_pult = 0x8309E8;
       break; 
        case 5:
       comands_pult = 0xA900E8;
       break; 
        case 6:
       comands_pult = 0xA901E8;
       break; 
        case 7:
       comands_pult = 0xA902E8;
       break; 
        case 8:
       comands_pult = 0xA903E8;
       break; 
      case 9:  
        comands_pult = 0;
      if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 200){ 
         lcdClear = 1;
         timmer_3 = millis();
        if(lcdClear){
        LD.clearDisplay();
        lcdClear = 0;}  
          zummer_on = 1;
           presets();    
          }
       break; 
        case 10:
       comands_pult = 0x8314E8;
       break; 
        case 11:
       comands_pult = 0xC4FF3B;
       break; 
         case 12:
       comands_pult = 0xC400C4;
       break; 
       
        case 13:
       comands_pult = 0x830EE8;
       break; 
        case 14:
       comands_pult = 0x8310E8;
       break; 
        case 15:
        comands_pult = 0;
        if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 200){
         timmer_3 = millis();

       testShot();
       }
       break; 
      

// switch(counter){
//       case 0:    
// if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 250){  
//     zummer_on = 1;
// 	irsend.sendSony(0x8305E8, 24); 
//   timmer_3 = millis();
// }
//   break;     
//   case 1:
// if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 250){  
//   zummer_on = 1;
// 	irsend.sendSony(0x8300E8, 24);  
//   timmer_3 = millis(); 
// }
//     break;     
//   case 2:
// if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 250){  
//   zummer_on = 1;
// 	irsend.sendSony(0x8322E8, 24); 
//   timmer_3 = millis();      
// }
//   break; 
//   case 3:
// if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 250){  
//   zummer_on = 1;
// 	irsend.sendSony(0x8019e8, 24);  
//   timmer_3 = millis();     
// }
//   break; 
  
//   case 4:
// if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 250){  
//   zummer_on = 1;
// 	irsend.sendSony(0xA900E8, 24);   // Red Color Team   
//   timmer_3 = millis(); 
// }
//   break; 
//   case 5:
// if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 250){  
//   zummer_on = 1;
// 	irsend.sendSony(0x8019e8, 24);
//   timmer_3 = millis();       
// }
//   break; 
//   case 6:
// if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 250){  
//   zummer_on = 1;
// 	irsend.sendSony(0x8019e8, 24); 
//   timmer_3 = millis();      
// }
//   break; 
//   case 7:
// if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 250){  
//   zummer_on = 1;
// 	irsend.sendSony(0x8019e8, 24); 
//   timmer_3 = millis();      
// }
//   break; 
//   case 8:
// if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 250){  
//   zummer_on = 1;
// 	irsend.sendSony(0x8019e8, 24);
//   timmer_3 = millis();      
// }
//   break; 
//   case 9:  
  
// if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 250){ 
//   lcdClear = 1;
// if(lcdClear){
//     LD.clearDisplay();
//     lcdClear = 0;}  
//   zummer_on = 1;
//   presets();  
//   timmer_3 = millis();  
// }
//   break; 
//   case 10:
// if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 250){  
//   zummer_on = 1;
// 	irsend.sendSony(0x8019e8, 24);      
//   timmer_3 = millis(); 
// }
//   break; 
//   case 11:
// if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 250){  
//   zummer_on = 1;
// 	irsend.sendSony(0x8019e8, 24);   
//   timmer_3 = millis();    
// }
//   break; 
//   case 12:
// if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 250){  
//   zummer_on = 1;
// 	irsend.sendSony(0x8019e8, 24); 
//   timmer_3 = millis();      
// }
//     break; 

  }
   if(counter == 7 || counter == 8){
 lcdClear =1;}

  if(zummer_on){
      digitalWrite(ZUMMER, HIGH);
        if(millis() - timmer_3 >= 10){
            zummer_on = 0;
            digitalWrite(ZUMMER, LOW);          
        }
    }
}

    //  void irSignal(long counterPresets){
    //   long irSiglalCode = 0xA800E8 + ((counterPresets + 1)*256);

    //     bool zummer_on = 1;
	  //     irsend.sendSony(irSiglalCode, 24);   
    //     timmer_3 = millis(); 
    //      if(zummer_on){
    //           digitalWrite(ZUMMER, HIGH);
    //             if(millis() - timmer_3 >= 10){
    //                 zummer_on = 0;
    //               digitalWrite(ZUMMER, LOW);          
    //                }
    //                 }
     
    //                             }

  
   

void presets(){
  bool a = 1;
  flag = 1;
  while(a){
if(!digitalRead(BUTTON_PLUS) && millis() - timmer_1 >= 100){
  counter_2++;
flag = 1;
timmer_1 = millis();
//lcdClear = 1;  
  }

if(counter_2 < 0){
  counter_2 = 12;
  flag = 1;
 // lcdClear = 1;
 }
  
  if(counter_2 > 60){
    counter_2 = 0;
    flag = 1;
    if(lcdClear){
    LD.clearDisplay();
    lcdClear = 0;
    //lcdClear = 1;
    }}
    
  if(!digitalRead(BUTTON_MINUS) && millis() - timmer_1 >= 100){
  counter_2--;
  flag = 1;
 // lcdClear = 1;
  timmer_1 = millis();}  

    if(counter_2 < 8 && flag){ 
  LD.printString_6x8("  Штурмовик", x, 0);
  LD.printString_6x8("  Снайпер", x, 1);
  LD.printString_6x8("  Пулемётчик", x, 2);
  LD.printString_6x8("  Медик", x, 3);
  LD.printString_6x8("  Разведчик", x, 4);
  LD.printString_6x8("  Терминатор", x, 5);
  LD.printString_6x8("  Зомби", x, 6);
  LD.printString_6x8("  Последний Герой", x, 7);
  LD.printString_6x8(">>", 0, counter_2);
  flag = 0;
  lcdClear = 1;
}  
else if(flag && counter_2 < 61) {  
  if(lcdClear){
    LD.clearDisplay();
    lcdClear = 0;
  }
  LD.printString_12x16(" >> Пресет Номер", x, 0);
  LD.printString_12x16("", 0, 5);
   LD.printNumber((long)counter_2 + 1);
  
  flag = 0;
  }
  if(!digitalRead(BUTTON_OK) && millis() - timmer_3 >= 255){  
      long irSiglalCode = 0xA800E8 + ((counter_2 + 1)*256);

        
	      irsend.sendSony(irSiglalCode, 24);   
        timmer_3 = millis(); 
        
                 digitalWrite(ZUMMER, HIGH);
               
                   
     timmer_3 = millis();
  }
  
// switch(counter_2){
// case 0:
// irSiglal(0xA800E8, counter_2);        
        
// case 1:
// irSiglal(0xA800E8, counter_2);  
// case 2:
// irSiglal(0xA800E8, counter_2);  
// case 3:
// irSiglal(0xA800E8, counter_2);  
// case 4:
// irSiglal(0xA800E8, counter_2);  
// case 3:
// irSiglal(0xA800E8, counter_2);  
// case 4:
// irSiglal(0xA800E8, counter_2);  
// case 5:
// irSiglal(0xA800E8, counter_2);  
// case 6:
// irSiglal(0xA800E8, counter_2);  
// case 7:
// irSiglal(0xA800E8, counter_2);  
// case 8:
// irSiglal(0xA800E8, counter_2);  
// case 9:
// irSiglal(0xA800E8, counter_2);  
// case 10:
// irSiglal(0xA800E8, counter_2);  
// case 11:
// irSiglal(0xA800E8, counter_2);  
// case 12:
// irSiglal(0xA800E8, counter_2);  
// case 13:
// irSiglal(0xA800E8, counter_2);  
// case 14:
// irSiglal(0xA800E8, counter_2);  
// case 15:
// irSiglal(0xA800E8, counter_2);  
// case 16:
// irSiglal(0xA800E8, counter_2);  
// case 17:
// irSiglal(0xA800E8, counter_2);  
// case 18:
// irSiglal(0xA800E8, counter_2);  
// case 19:
// irSiglal(0xA800E8, counter_2);  
// case 20:
// irSiglal(0xA800E8, counter_2);  
// case 21:
// irSiglal(0xA800E8, counter_2);  
// case 22:
// irSiglal(0xA800E8, counter_2);  
// case 23:
// irSiglal(0xA800E8, counter_2);  
// case 24:
// irSiglal(0xA800E8, counter_2);  
// case 25:
// irSiglal(0xA800E8, counter_2);  
// case 26:
// irSiglal(0xA800E8, counter_2);  
// case 27:
// irSiglal(0xA800E8, counter_2);  
// case 28:
// irSiglal(0xA800E8, counter_2);  
// case 29:
// irSiglal(0xA800E8, counter_2);  
// case 30:
// irSiglal(0xA800E8, counter_2);  
// case 31:
// irSiglal(0xA800E8, counter_2);  
// case 32:
// irSiglal(0xA800E8, counter_2);  
// case 33:
// irSiglal(0xA800E8, counter_2);  
// case 34:
// irSiglal(0xA800E8, counter_2);  
// case 35:
// irSiglal(0xA800E8, counter_2);  
// case 36:
// irSiglal(0xA800E8, counter_2);  
// case 37:
// irSiglal(0xA800E8, counter_2);  
// case 38:
// irSiglal(0xA800E8, counter_2);  
// case 39:
// irSiglal(0xA800E8, counter_2);  
// case 40:
// irSiglal(0xA800E8, counter_2);  
// case 41:
// irSiglal(0xA800E8, counter_2);  
// case 42:
// irSiglal(0xA800E8, counter_2);  
// case 43:
// irSiglal(0xA800E8, counter_2);  
// case 44:
// irSiglal(0xA800E8, counter_2);  
// case 45:
// irSiglal(0xA800E8, counter_2);  
// case 46:
// irSiglal(0xA800E8, counter_2);  
// case 47:
// irSiglal(0xA800E8, counter_2);  
// case 48:
// irSiglal(0xA800E8, counter_2);  
// case 49:
// irSiglal(0xA800E8, counter_2);  
// case 50:
// irSiglal(0xA800E8, counter_2);  
// case 51:
// irSiglal(0xA800E8, counter_2);  
// case 52:
// irSiglal(0xA800E8, counter_2);  
// case 53:
// irSiglal(0xA800E8, counter_2);  
// case 54:
// irSiglal(0xA800E8, counter_2);  
// case 55:
// irSiglal(0xA800E8, counter_2);  
// case 56:
// irSiglal(0xA800E8, counter_2);  
// case 57:
// irSiglal(0xA800E8, counter_2);  
// case 58:
// irSiglal(0xA800E8, counter_2);  
// case 59:
// irSiglal(0xA800E8, counter_2);  
// case 60:
// irSiglal(0xA800E8, counter_2);  }
 if(millis() - timmer_3 >= 10){
                  
                  digitalWrite(ZUMMER, LOW);   }       
  if(!digitalRead(BUTTON_MINUS) && !digitalRead(BUTTON_PLUS))
    a = 0;  
  }
  LD.clearDisplay();
  counter_2 = 0;
  flag = 1;
  return;
  }

void testShot(){
    irrecv.enableIRIn();
    long id_gamer = 0;
    long damage_1 = 0;
    bool b = 1;
  LD.clearDisplay();
  
  while(b){
    
    LD.printString_6x8("ID игрока", 0, 0);
    LD.printString_6x8("Цвет команды", 0, 3);
     LD.printString_6x8("Урон выстрела", 0, 6);
     
     if (irrecv.decode(&results)) {
       long a = results.value;
          Serial.println(results.value, HEX);
          irrecv.resume(); 
       
       if(bitRead(a,4) == 0 && bitRead(a,5) == 0  && a < 0xFFFF){
            LD.printString_6x8("  Красный", 0, 4);
            }         
       else if(bitRead(a,4) == 1 && bitRead(a,5) == 0 && a < 0xFFFF){ 
         LD.printString_6x8("  Синий", 0, 4);
       }
       else if(bitRead(a,4) == 0 && bitRead(a,5) == 1 && a < 0xFFFF)     // Yelow
            { LD.printString_6x8("  Жёлтый", 0, 4);
            }
       else if(bitRead(a,4) == 1 && bitRead(a,5) == 1 && a < 0xFFFF){
              LD.printString_6x8("  Зелёный", 0, 4);
              }
       else if(a > 0xFFFF){   
              LD.clearDisplay(); 
              LD.printString_6x8(" ERROR!", 0, 4);                        
              LD.printString_6x8("", 0, 5);
              LD.printNumber((long)a, HEX);
              delay(1000);
              LD.clearDisplay();
              
              // if(millis() - timmer_1 >= 2000 )
              //           LD.clearDisplay();
        }
        if(a < 0x20000){
        if(bitRead(a,6) == 1 && a < 0xFFFF)
          id_gamer += 1;
        if(bitRead(a,7) == 1 && a < 0xFFFF)
          id_gamer += 2;
        if(bitRead(a,8) == 1 && a < 0xFFFF)
          id_gamer += 4;
          if(bitRead(a,9) == 1 && a < 0xFFFF)
          id_gamer += 8;
          if(bitRead(a,10) == 1 && a < 0xFFFF)
          id_gamer += 16;
          if(bitRead(a,11) == 1 && a < 0xFFFF)
          id_gamer += 32;
          if(bitRead(a,12) == 1 && a < 0xFFFF)
          id_gamer += 64;
          LD.printString_6x8("", 0, 1);
              LD.printNumber((long)id_gamer);
              id_gamer = 0;
      
      if(!bitRead(a, 0) && !bitRead(a, 1) && !bitRead(a, 2) && !bitRead(a, 3))
      damage_1 = 1;
      else if(bitRead(a, 0) && !bitRead(a, 1) && !bitRead(a, 2) && !bitRead(a, 3))                    
      damage_1 = 2;
      else if(!bitRead(a, 0) && bitRead(a, 1) && !bitRead(a, 2) && !bitRead(a, 3))                    
      damage_1 = 4;
      else if(bitRead(a, 0) && bitRead(a, 1) && !bitRead(a, 2) && !bitRead(a, 3))                    
      damage_1 = 5;
      else if(!bitRead(a, 0) && !bitRead(a, 1) && bitRead(a, 2) && !bitRead(a, 3))                    
      damage_1 = 7;
      else if(bitRead(a, 0) && !bitRead(a, 1) && bitRead(a, 2) && !bitRead(a, 3))                    
      damage_1 = 10;
      else if(!bitRead(a, 0) && bitRead(a, 1) && bitRead(a, 2) && !bitRead(a, 3))                    
      damage_1 = 15;
       else if(bitRead(a, 0) && bitRead(a, 1) && bitRead(a, 2) && !bitRead(a, 3))                    
      damage_1 = 17;
       else if(!bitRead(a, 0) && !bitRead(a, 1) && !bitRead(a, 2) && bitRead(a, 3))                    
      damage_1 = 20;
       else if(bitRead(a, 0) && !bitRead(a, 1) && !bitRead(a, 2) && bitRead(a, 3))                    
      damage_1 = 25;
      else if(!bitRead(a, 0) && bitRead(a, 1) && !bitRead(a, 2) && bitRead(a, 3))                    
      damage_1 = 30;
      else if(bitRead(a, 0) && bitRead(a, 1) && !bitRead(a, 2) && bitRead(a, 3))                    
      damage_1 = 35;
      else if(!bitRead(a, 0) && !bitRead(a, 1) && bitRead(a, 2) && bitRead(a, 3))                    
      damage_1 = 40;
      else if(bitRead(a, 0) && !bitRead(a, 1) && bitRead(a, 2) && bitRead(a, 3))                    
      damage_1 = 50;
      else if(!bitRead(a, 0) && bitRead(a, 1) && bitRead(a, 2) && bitRead(a, 3))                    
      damage_1 = 75;
      else if(bitRead(a, 0) && bitRead(a, 1) && bitRead(a, 2) && bitRead(a, 3))                    
      damage_1 = 100;
      LD.printString_6x8(" ", 0, 7);
              LD.printNumber((long)damage_1);
             damage_1 = 0;
        }            
     }     
     
    if(!digitalRead(BUTTON_MINUS) && !digitalRead(BUTTON_PLUS))
      b = 0;  
  }
  LD.clearDisplay();
  flag = 1;
  return;

}
